import speech_recognition as sr
from Settings import *
# second_action = ["с собакой", "в магазин", "на свидание", "собеседование на работе", "совещание на работе", "в парк",
#                  "в парке",
#                  "в лесу", "в лес", "на природу", "в кино", "в магазин", "в музей", "в супермаркет", "в гости",
#                  "в ресторан", "в кафе",
#                  "на концерт", "в зоопарк ", "на улицу ", "на работу", "в театр", "в огород", "в школу", "спать",
#                  "встать", "занятие",
#                  "играть", "в институт", "на завод", "в университет", "в универ", "к бабушке", "к родителям",
#                  "встретиться с учителем",
#                  "встретиться с другом ", "доделать проект", "сделать проект", "начать проект", "занятся проектом",
#                  "в ТЦ",
#                  "в торговый центр", "в метро", "на метро", "на поле", "на мастеркласс", "на озеро", "на реку",
#                  "на речку", "на море",
#                  "путешествовать", "кататься на велосипеде", "убраться в комнате", "прибраться в комнате",
#                  "привести комнату в порядок",
#                  "почистить комнату", "сделать домашнее задание", "сделать дз", "протереть пыль",
#                  "пропылесосить комнату",
#                  "пропылесосить в комнате", "помочь родственникам", "помочь родным", "на тренировку", "в спортзал",
#                  "заполнить документы", "почистить зубы", "приготовить завтрак", "приготовить обед", "приготовить ужин",
#                  "позавтракать",
#                  "пообедать", "поужинать", "завтракать", "обедать", "ужинать", "полдничать", "соннничать",
#                  "играть смладшим братом", "покушать", "поесть", "приготовить поесть", "приготовить кушать",
#                  "приготовить еду",
#                  "чистить зубы", "сполоснуть рот", "ополоснуть рот", "заправить постель", "помыть посуду",
#                  "мыть посуду",
#                  "подготовить домашнее задание", "принять пищу", "принять душ", "помыться", "подмыться", "сполоснуться",
#                  "вытереть стол", "пропылесосить", "пойти на занятие", "вытереть пол", "сменить постель",
#                  "поменять постель",
#                  "купить продукты", "купить еду", "купить", "одежду", "заправить машину", "постирать одежду",
#                  "стирать одежду",
#                  "загрузить стиральную машину", "загрузить посудомойку", "выгрузить стиральную машину",
#                  "выгрузить посудомойку",
#                  "работать", "на свежий воздух", "на программирование", "заниматься спортом", "питаться",
#                  "потреблять больше фруктов",
#                  "на зарядку", "утренняя зарядка", "на утреннюю зарядку", "играть с другом", "играть с младшей сестрой",
#                  "положить еду для птиц", "прочитать книгу", "продолжить чтение книги", "создать книгу",
#                  "на тренировку",
#                  "придумать книгу", "провести занятие", "сходить в туалет", "выпить витаминь",
#                  "покормить животных"]

r = sr.Recognizer()
mic = sr.Microphone(device_index=1)


with sr.Microphone() as source:
    print("Слушаю")
    audio_data = r.record(source,duration=15)

    print("Закончил запись")
    text = " | " + r.recognize_google(audio_data, language="ru-RU") + " | "

    print(text)
    words = text.split(" ")
    len_list = len(words)
    actA, time = [""], [""]

    for i in range(1, len(words)):
        reduce = f" {words[i - 1]} {words[i]} "
        if action(reduce) is not None:
            actA.append(action(reduce))
        if time_function(reduce) is not None:
            reduce = f" {words[i - 1]} {words[i]} {words[i + 1]}"
            if time_function(reduce) != time[-1]:
                time.append(time_function(reduce))

    for i in range(1, min(len(actA), len(time))):
        print(f"Action: {actA[i]} | Time: {time[i]}")



#     print(text + " ")
#     # print(f"Action: {action(text)}")
#     # print(f"Time: {time_function(text)}")
# text = " | Добрый день супер Не хочешь ли ты пойти сегодня в кино в 4:00 вечера отличная идея предлагаю пойти на робототехнику в 8:00 вечера хорошо | "

        # file = open('Text.txt', 'a', encoding='utf-8')
        # if time_function(text) != None and action(text) != None:
        #     file.write("\n" + str(time_function(text)))
        #     file.write(" " + action(text))
        #     file.close()

